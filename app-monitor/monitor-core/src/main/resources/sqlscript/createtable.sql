--监控管理员
CREATE TABLE IF NOT EXISTS `monitor`.`TB_MONITOR_MANAGER` (
  `MANAGER_ID` INT NOT NULL COMMENT '管理员ID',
  `USERNAME` VARCHAR(64) NULL COMMENT '管理员用户名',
  `PWD` VARCHAR(64) NULL COMMENT '密码',
  `LAST_LOGIN_TIME` DATETIME NULL COMMENT '最后登录时间',
  `STATUS` INT NOT NULL DEFAULT 1 COMMENT '状态：1为有效，0为无效',
  PRIMARY KEY (`MANAGER_ID`),
  UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin
COMMENT = '监控管理员';


--监控实体
CREATE TABLE IF NOT EXISTS `monitor`.`TB_MONITOR_ENTITY` (
  `CFG_ID` INT NOT NULL AUTO_INCREMENT COMMENT '配置ID',
  `NAME` VARCHAR(128) NULL COMMENT '监控实体名称',
  `MONITOR_TYPE` VARCHAR(32) NOT NULL COMMENT '配置类型，对应监控插件的编码',
  `MONITOR_ENTITY_CFG` VARCHAR(1024) NOT NULL COMMENT '监控配置,具体格式和解析由插件实现。\n例如：\n{\n	‘dbtype’: ‘mysql’,\n	‘url’	:	‘jdbc:…’,\n	‘user’:	‘monitor’,\n	‘pwd’	: ‘monitor’\n}',
  `MONITOR_ENTITY_NODES` VARCHAR(1024) NULL COMMENT '监控节点,具体格式和解析由插件实现。\n[{name:,ip:},{name:,ip:}]',
  `MANAGER_ID` INT NULL COMMENT '创建者',
  `DESCRIPTION` VARCHAR(255) NULL COMMENT '描述',
  `STATUS` INT NULL DEFAULT 1 COMMENT '状态：0为无效，1为有效',
  `CREATE_TIME` DATETIME NULL COMMENT '创建时间',
  `UPDATE_TIME` DATETIME NULL COMMENT '更新时间',
  PRIMARY KEY (`CFG_ID`),
  INDEX `fk_TB_MONITOR_ENTITY_TB_MONITOR_MANAGER_idx` (`MANAGER_ID` ASC),
  CONSTRAINT `fk_TB_MONITOR_ENTITY_TB_MONITOR_MANAGER`
    FOREIGN KEY (`MANAGER_ID`)
    REFERENCES `TB_MONITOR_MANAGER` (`MANAGER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin
COMMENT = '监控实体，例如监控WEB，监控数据库等';



--监控项
CREATE TABLE IF NOT EXISTS `TB_MONITOR_ITEM` (
  `ITEM_ID` INT NOT NULL COMMENT '监控项ID',
  `ENTITY_CFG_ID` INT NOT NULL COMMENT '监控实体对象ID',
  `NAME` VARCHAR(128) NOT NULL COMMENT '监控项名称',
  `ITEM_CFG` VARCHAR(1024) NOT NULL COMMENT '监控项配置,具体格式和解析由插件实现。\n{\n	request:’’,\n	response:’’\n}',
  `REQ_TIMES` INT NULL DEFAULT 0 COMMENT '请求次数',
  `SUCCESS_TIMES` INT NULL DEFAULT 0 COMMENT '成功次数',
  `FAILURE_TIMES` INT NULL DEFAULT 0 COMMENT '失败次数',
  `SCHEDULER_CRON` VARCHAR(32) NULL COMMENT '调度表达式（unix cron），* * * * *',
  `NOTIFY_MOBILE` VARCHAR(128) NULL COMMENT '通知手机, [“1383424234”,”14934234234”]',
  `NOTIFY_EMAIL` VARCHAR(255) NULL COMMENT '通知邮件,[“a@a.com”,”b@b.com”]',
  `DESCRIPTION` VARCHAR(255) NULL COMMENT '描述',
  `STATUS` INT NOT NULL DEFAULT 1 COMMENT '状态，1为有效，0为无效',
  `CREATE_TIME` DATETIME NULL COMMENT '创建时间',
  `UPDATE_TIME` DATETIME NULL COMMENT '更新时间',
  PRIMARY KEY (`ITEM_ID`),
  INDEX `fk_TB_MONITOR_ITEM_TB_MONITOR_ENTITY1_idx` (`ENTITY_CFG_ID` ASC),
  CONSTRAINT `fk_TB_MONITOR_ITEM_TB_MONITOR_ENTITY1`
    FOREIGN KEY (`ENTITY_CFG_ID`)
    REFERENCES `TB_MONITOR_ENTITY` (`CFG_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '监控项';


--测试结果
CREATE TABLE IF NOT EXISTS `TB_MONITOR_TEST` (
  `TEST_ID` INT NOT NULL AUTO_INCREMENT COMMENT '结果标识',
  `ITEM_ID` INT NOT NULL COMMENT '监控实体项',
  `TEST_TIME` DATETIME NOT NULL COMMENT '测试时间',
  `RESULT` TINYINT(1) NULL DEFAULT 1 COMMENT '测试结果 ',
  `EXPECT_RESPONSE` VARCHAR(10000) NULL COMMENT '期望响应',
  `ACTUL_RESPONSE` VARCHAR(10000) NULL COMMENT '实际响应',
  `URL` VARCHAR(1000) NULL COMMENT '测试URL',
  `PARAMS` VARCHAR(256) NULL COMMENT '请求参数',
  PRIMARY KEY (`TEST_ID`),
  INDEX `fk_TB_MONITOR_TEST_TB_MONITOR_ITEM1_idx` (`ITEM_ID` ASC),
  INDEX `fk_TEST_TIME` (`TEST_TIME` ASC),
  CONSTRAINT `fk_TB_MONITOR_TEST_TB_MONITOR_ITEM1`
    FOREIGN KEY (`ITEM_ID`)
    REFERENCES `TB_MONITOR_ITEM` (`ITEM_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin
COMMENT = '测试结果'